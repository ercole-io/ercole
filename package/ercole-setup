#!/bin/sh

# Create the file /etc/ercole/conf.d/20-ercolesetup.toml if missing
mkdir -p /etc/ercole/conf.d
if [ ! -f /etc/ercole/conf.d/20-ercolesetup.toml ]; then 
	echo "# This file was generated by ercole-setup" >> /etc/ercole/conf.d/20-ercolesetup.toml
fi

# Get actual configured values in /etc/ercole/conf.d/20-ercolesetup.toml
DATA_SERVICE_REMOTE_ENDPOINT=$(grep "DataService.RemoteEndpoint" /etc/ercole/conf.d/20-ercolesetup.toml | cut -d'=' -f2 | sed -e 's/[[:space:]]*"//' | sed -e 's/"[[:space:]]*//')
ALERT_SERVICE_PUBLISHER_PASSWORD=$(grep "AlertService.PublisherPassword" /etc/ercole/conf.d/20-ercolesetup.toml | cut -d'=' -f2 | sed -e 's/[[:space:]]*"//' | sed -e 's/"[[:space:]]*//')
API_SERVICE_REMOTE_ENDPOINT=$(grep "APIService.RemoteEndpoint" /etc/ercole/conf.d/20-ercolesetup.toml | cut -d'=' -f2 | sed -e 's/[[:space:]]*"//' | sed -e 's/"[[:space:]]*//')
API_SERVICE_AUTH_PROVIDER_PRIVATE_KEY=$(grep "APIService.AuthenticationProvider.PrivateKey" /etc/ercole/conf.d/20-ercolesetup.toml | cut -d'=' -f2 | sed -e 's/[[:space:]]*"//' | sed -e 's/"[[:space:]]*//')
API_SERVICE_AUTH_PROVIDER_PUBLIC_KEY=$(grep "APIService.AuthenticationProvider.PublicKey" /etc/ercole/conf.d/20-ercolesetup.toml | cut -d'=' -f2 | sed -e 's/[[:space:]]*"//' | sed -e 's/"[[:space:]]*//')
REPO_SERVICE_HTTP_REMOTE_ENDPOINT=$(grep "RepoService.HTTP.RemoteEndpoint" /etc/ercole/conf.d/20-ercolesetup.toml | cut -d'=' -f2 | sed -e 's/[[:space:]]*"//' | sed -e 's/"[[:space:]]*//')
REPO_SERVICE_SFTP_REMOTE_ENDPOINT=$(grep "RepoService.SFTP.RemoteEndpoint" /etc/ercole/conf.d/20-ercolesetup.toml | cut -d'=' -f2 | sed -e 's/[[:space:]]*"//' | sed -e 's/"[[:space:]]*//')
REPO_SERVICE_SFTP_PRIVATE_KEY=$(grep "RepoService.SFTP.PrivateKey" /etc/ercole/conf.d/20-ercolesetup.toml | cut -d'=' -f2 | sed -e 's/[[:space:]]*"//' | sed -e 's/"[[:space:]]*//')


# Get actual IP Addres
CURRENT_IP_ADDRESS=""
if [ -z $DATA_SERVICE_REMOTE_ENDPOINT ] || [ -z $API_SERVICE_REMOTE_ENDPOINT ] || [ -z $REPO_SERVICE_HTTP_REMOTE_ENDPOINT ] || [ -z $REPO_SERVICE_SFTP_REMOTE_ENDPOINT ]; then
	CURRENT_IP_ADDRESS=$(hostname -I | cut -d' ' -f1)
	if [ -z NOINTERACTIVE ]; then
		read -p "IP address($CURRENT_IP_ADDRESS): " INPUT
		if [ ! -z $INPUT ]; then
			CURRENT_IP_ADDRESS=$INPUT
		fi
	fi
fi

# Set the endpoints if missing
if [ -z $DATA_SERVICE_REMOTE_ENDPOINT ]; then
	DATA_SERVICE_REMOTE_ENDPOINT="http://$CURRENT_IP_ADDRESS:11111"
	echo "DataService.RemoteEndpoint = \"$DATA_SERVICE_REMOTE_ENDPOINT\"" >> /etc/ercole/conf.d/20-ercolesetup.toml
fi
if [ -z $API_SERVICE_REMOTE_ENDPOINT ]; then
	API_SERVICE_REMOTE_ENDPOINT="http://$CURRENT_IP_ADDRESS:11113"
	echo "APIService.RemoteEndpoint = \"$API_SERVICE_REMOTE_ENDPOINT\"" >> /etc/ercole/conf.d/20-ercolesetup.toml
fi
if [ -z $REPO_SERVICE_HTTP_REMOTE_ENDPOINT ]; then
	REPO_SERVICE_HTTP_REMOTE_ENDPOINT="http://$CURRENT_IP_ADDRESS:11114"
	echo "RepoService.HTTP.RemoteEndpoint = \"$REPO_SERVICE_HTTP_REMOTE_ENDPOINT\"" >> /etc/ercole/conf.d/20-ercolesetup.toml
fi
if [ -z $REPO_SERVICE_SFTP_REMOTE_ENDPOINT ]; then
	REPO_SERVICE_SFTP_REMOTE_ENDPOINT="http://$CURRENT_IP_ADDRESS:11115"
	echo "RepoService.SFTP.RemoteEndpoint = \"$REPO_SERVICE_SFTP_REMOTE_ENDPOINT\"" >> /etc/ercole/conf.d/20-ercolesetup.toml
fi

# Set the ALERT_SERVICE_PUBLISHER_PASSWORD if missing
if [ -z $ALERT_SERVICE_PUBLISHER_PASSWORD ]; then
	ALERT_SERVICE_PUBLISHER_PASSWORD=$(tr -cd '12345!@#$%qwertQWERTasdfgASDFGzxcvbZXCVB' < /dev/urandom | fold -w60 | head -n1)
	echo "AlertService.PublisherPassword = \"$ALERT_SERVICE_PUBLISHER_PASSWORD\"" >> /etc/ercole/conf.d/20-ercolesetup.toml
fi

# Create and set the authentication provider keys if not found
if [ -z $API_SERVICE_AUTH_PROVIDER_PRIVATE_KEY ] || [ -z $API_SERVICE_AUTH_PROVIDER_PUBLIC_KEY ]; then
	if [ ! -f /etc/ercole/ercole-auth.pem ]; then
		openssl genrsa -out /etc/ercole/ercole-auth.pem 2048
		openssl rsa -in /etc/ercole/ercole-auth.pem -pubout -out /etc/ercole/ercole-auth.pub
	fi

	API_SERVICE_AUTH_PROVIDER_PRIVATE_KEY="/etc/ercole/ercole-auth.pem"
	API_SERVICE_AUTH_PROVIDER_PUBLIC_KEY="/etc/ercole/ercole-auth.pub"
	echo "APIService.AuthenticationProvider.PrivateKey = \"$API_SERVICE_AUTH_PROVIDER_PRIVATE_KEY\"" >> /etc/ercole/conf.d/20-ercolesetup.toml
	echo "APIService.AuthenticationProvider.PublicKey = \"$API_SERVICE_AUTH_PROVIDER_PUBLIC_KEY\"" >> /etc/ercole/conf.d/20-ercolesetup.toml
fi

# Create and set the authentication provider keys if not found
if [ -z $REPO_SERVICE_SFTP_PRIVATE_KEY ]; then
	if [ ! -f /etc/ercole/ercole-repo-sftp.pem ]; then
		openssl genrsa -out /etc/ercole/ercole-repo-sftp.pem 2048
		openssl rsa -in /etc/ercole/ercole-repo-sftp.pem -pubout -out /etc/ercole/ercole-repo-sftp.pub
	fi

	REPO_SERVICE_SFTP_PRIVATE_KEY="/etc/ercole/ercole-repo-sftp.pem"
	echo "RepoService.SFTP.PrivateKey = \"$REPO_SERVICE_SFTP_PRIVATE_KEY\"" >> /etc/ercole/conf.d/20-ercolesetup.toml
fi

# Run the frontend setup
command -v ercoleweb-setup > /dev/null && ercoleweb-setup

timeout 2 ercole migrate || echo "The migration is failed. It's necessary to run ercole migrate"